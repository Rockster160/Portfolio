<div class="skinny-container">
  <div class="ttable striped bordered">
    <div class="tbody monster-table">
      <div class="trow">
        <div class="tcell">Name</div>
        <div class="tcell">Class</div>
        <div class="tcell">Con</div>
        <div class="tcell">Atk</div>
        <div class="tcell">Def</div>
        <div class="tcell">Spd</div>
        <div class="tcell">Resist</div>
        <div class="tcell">Accuracy</div>
        <div class="tcell">Critical Rate</div>
        <div class="tcell">Critical Damage</div>
      </div>
    </div>
  </div>
</div>

<br>

<div class="skinny-container">
  <div class="ttable striped bordered">
    <div class="tbody rune-table">
      <div class="trow">
        <div class="tcell">Rune</div>
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">
  function Monster(props) {
    var monster = this
    Object.keys(props).forEach(function(k) {
      monster[k] = props [k]
    })
  }

  Monster.fromData = function(data) {
    var props = {
      data: data,
      class: data.class,
      con: data.con,
      atk: data.atk,
      def: data.def,
      spd: data.spd,
      resist: data.resist,
      accuracy: data.accuracy,
      critical_rate: data.critical_rate,
      critical_damage: data.critical_damage
    }
    props.name = mapping_data.getMonsterName(data.unit_master_id)
    // set human-readable names from mappings
    return new Monster(props)
  }

  function Rune(props) {
    var rune = this
    Object.keys(props).forEach(function(k) {
      rune[k] = props[k]
    })
  }

  Rune.fromData = function(data) {
    var props = {
      data: data
    }
    // set human-readable names from mappings
    return new Rune(props)
  }

  player_data = <%= @player_data.to_json.html_safe %>
  mapping_data = <%= @mapping.html_safe %>

  monsters = []
  runes = []

  player_data.runes.forEach(function(rune_data) {
    runes.push(Rune.fromData(rune_data))
  })

  player_data.unit_list.forEach(function(monster_data) {
    var monster = Monster.fromData(monster_data)
    monster.parsed_runes = []

    monster_data.runes.forEach(function(rune_data) {
      var rune = Rune.fromData(rune_data)
      runes.push(rune)
      monster.parsed_runes.push(rune)
    })

    monsters.push(monster)
  })

  // ================================ Add the monsters to a table

  var table = document.querySelector(".monster-table")
  monsters.forEach(function(monster) {
    var row = document.createElement("div")
    try {
      row.classList.add("trow")
    } catch (e) {
    }

    [
      "name",
      "class",
      "con",
      "atk",
      "def",
      "spd",
      "resist",
      "accuracy",
      "critical_rate",
      "critical_damage"
    ].forEach(function(key) {
      var cell = document.createElement("div")
      cell.classList.add("tcell")
      cell.innerHTML = monster[key]

      row.appendChild(cell)
    })

    table.appendChild(row)
  })

  runes.forEach(function(rune) {
    var table = document.querySelector(".rune-table")
    var row = '<div class="trow"><div class="tcell">' + rune.name + '</div></div>'
    table.insertAdjacentHTML('beforeend', row)
  })
</script>



<!-- Monster Props -->
<!-- <td>Class</td> -->
<!-- <td>Con</td> -->
<!-- <td>Atk</td> -->
<!-- <td>Def</td> -->
<!-- <td>Spd</td> -->
<!-- <td>Resist</td> -->
<!-- <td>Accuracy</td> -->
<!-- <td>Critical Rate</td> -->
<!-- <td>Critical Damage</td> -->

<!-- Rune Props -->
<!-- <th>HP +</th> -->
<!-- <th>HP</th> -->
<!-- <th>ATK +</th> -->
<!-- <th>ATK</th> -->
<!-- <th>DEF +</th> -->
<!-- <th>DEF</th> -->
<!-- <th>SPD +</th> -->
<!-- <th>CRI Rate</th> -->
<!-- <th>CRI Dmg</th> -->
<!-- <th>Resistance</th> -->
<!-- <th>Accuracy</th> -->
