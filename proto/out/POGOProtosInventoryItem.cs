// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Inventory.Item.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Inventory.Item {

  /// <summary>Holder for reflection information generated from POGOProtos.Inventory.Item.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class POGOProtosInventoryItemReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos.Inventory.Item.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static POGOProtosInventoryItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9QT0dPUHJvdG9zLkludmVudG9yeS5JdGVtLnByb3RvEhlQT0dPUHJvdG9z",
            "LkludmVudG9yeS5JdGVtIlMKCUl0ZW1Bd2FyZBIyCgdpdGVtX2lkGAEgASgO",
            "MiEuUE9HT1Byb3Rvcy5JbnZlbnRvcnkuSXRlbS5JdGVtSWQSEgoKaXRlbV9j",
            "b3VudBgCIAEoBSJdCghJdGVtRGF0YRIyCgdpdGVtX2lkGAEgASgOMiEuUE9H",
            "T1Byb3Rvcy5JbnZlbnRvcnkuSXRlbS5JdGVtSWQSDQoFY291bnQYAiABKAUS",
            "DgoGdW5zZWVuGAMgASgIKscFCgZJdGVtSWQSEAoMSVRFTV9VTktOT1dOEAAS",
            "EgoOSVRFTV9QT0tFX0JBTEwQARITCg9JVEVNX0dSRUFUX0JBTEwQAhITCg9J",
            "VEVNX1VMVFJBX0JBTEwQAxIUChBJVEVNX01BU1RFUl9CQUxMEAQSDwoLSVRF",
            "TV9QT1RJT04QZRIVChFJVEVNX1NVUEVSX1BPVElPThBmEhUKEUlURU1fSFlQ",
            "RVJfUE9USU9OEGcSEwoPSVRFTV9NQVhfUE9USU9OEGgSEAoLSVRFTV9SRVZJ",
            "VkUQyQESFAoPSVRFTV9NQVhfUkVWSVZFEMoBEhMKDklURU1fTFVDS1lfRUdH",
            "EK0CEhoKFUlURU1fSU5DRU5TRV9PUkRJTkFSWRCRAxIXChJJVEVNX0lOQ0VO",
            "U0VfU1BJQ1kQkgMSFgoRSVRFTV9JTkNFTlNFX0NPT0wQkwMSGAoTSVRFTV9J",
            "TkNFTlNFX0ZMT1JBTBCUAxITCg5JVEVNX1RST1lfRElTSxD1AxISCg1JVEVN",
            "X1hfQVRUQUNLENoEEhMKDklURU1fWF9ERUZFTlNFENsEEhMKDklURU1fWF9N",
            "SVJBQ0xFENwEEhQKD0lURU1fUkFaWl9CRVJSWRC9BRIUCg9JVEVNX0JMVUtf",
            "QkVSUlkQvgUSFQoQSVRFTV9OQU5BQl9CRVJSWRC/BRIVChBJVEVNX1dFUEFS",
            "X0JFUlJZEMAFEhUKEElURU1fUElOQVBfQkVSUlkQwQUSGAoTSVRFTV9TUEVD",
            "SUFMX0NBTUVSQRChBhIjCh5JVEVNX0lOQ1VCQVRPUl9CQVNJQ19VTkxJTUlU",
            "RUQQhQcSGQoUSVRFTV9JTkNVQkFUT1JfQkFTSUMQhgcSIQocSVRFTV9QT0tF",
            "TU9OX1NUT1JBR0VfVVBHUkFERRDpBxIeChlJVEVNX0lURU1fU1RPUkFHRV9V",
            "UEdSQURFEOoHKrICCghJdGVtVHlwZRISCg5JVEVNX1RZUEVfTk9ORRAAEhYK",
            "EklURU1fVFlQRV9QT0tFQkFMTBABEhQKEElURU1fVFlQRV9QT1RJT04QAhIU",
            "ChBJVEVNX1RZUEVfUkVWSVZFEAMSEQoNSVRFTV9UWVBFX01BUBAEEhQKEElU",
            "RU1fVFlQRV9CQVRUTEUQBRISCg5JVEVNX1RZUEVfRk9PRBAGEhQKEElURU1f",
            "VFlQRV9DQU1FUkEQBxISCg5JVEVNX1RZUEVfRElTSxAIEhcKE0lURU1fVFlQ",
            "RV9JTkNVQkFUT1IQCRIVChFJVEVNX1RZUEVfSU5DRU5TRRAKEhYKEklURU1f",
            "VFlQRV9YUF9CT09TVBALEh8KG0lURU1fVFlQRV9JTlZFTlRPUllfVVBHUkFE",
            "RRAMYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(new[] {typeof(global::POGOProtos.Inventory.Item.ItemId), typeof(global::POGOProtos.Inventory.Item.ItemType), }, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::POGOProtos.Inventory.Item.ItemAward), global::POGOProtos.Inventory.Item.ItemAward.Parser, new[]{ "ItemId", "ItemCount" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::POGOProtos.Inventory.Item.ItemData), global::POGOProtos.Inventory.Item.ItemData.Parser, new[]{ "ItemId", "Count", "Unseen" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ItemId {
    ITEM_UNKNOWN = 0,
    ITEM_POKE_BALL = 1,
    ITEM_GREAT_BALL = 2,
    ITEM_ULTRA_BALL = 3,
    ITEM_MASTER_BALL = 4,
    ITEM_POTION = 101,
    ITEM_SUPER_POTION = 102,
    ITEM_HYPER_POTION = 103,
    ITEM_MAX_POTION = 104,
    ITEM_REVIVE = 201,
    ITEM_MAX_REVIVE = 202,
    ITEM_LUCKY_EGG = 301,
    ITEM_INCENSE_ORDINARY = 401,
    ITEM_INCENSE_SPICY = 402,
    ITEM_INCENSE_COOL = 403,
    ITEM_INCENSE_FLORAL = 404,
    ITEM_TROY_DISK = 501,
    ITEM_X_ATTACK = 602,
    ITEM_X_DEFENSE = 603,
    ITEM_X_MIRACLE = 604,
    ITEM_RAZZ_BERRY = 701,
    ITEM_BLUK_BERRY = 702,
    ITEM_NANAB_BERRY = 703,
    ITEM_WEPAR_BERRY = 704,
    ITEM_PINAP_BERRY = 705,
    ITEM_SPECIAL_CAMERA = 801,
    ITEM_INCUBATOR_BASIC_UNLIMITED = 901,
    ITEM_INCUBATOR_BASIC = 902,
    ITEM_POKEMON_STORAGE_UPGRADE = 1001,
    ITEM_ITEM_STORAGE_UPGRADE = 1002,
  }

  public enum ItemType {
    ITEM_TYPE_NONE = 0,
    ITEM_TYPE_POKEBALL = 1,
    ITEM_TYPE_POTION = 2,
    ITEM_TYPE_REVIVE = 3,
    ITEM_TYPE_MAP = 4,
    ITEM_TYPE_BATTLE = 5,
    ITEM_TYPE_FOOD = 6,
    ITEM_TYPE_CAMERA = 7,
    ITEM_TYPE_DISK = 8,
    ITEM_TYPE_INCUBATOR = 9,
    ITEM_TYPE_INCENSE = 10,
    ITEM_TYPE_XP_BOOST = 11,
    ITEM_TYPE_INVENTORY_UPGRADE = 12,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ItemAward : pb::IMessage<ItemAward> {
    private static readonly pb::MessageParser<ItemAward> _parser = new pb::MessageParser<ItemAward>(() => new ItemAward());
    public static pb::MessageParser<ItemAward> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.Item.POGOProtosInventoryItemReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ItemAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ItemAward(ItemAward other) : this() {
      itemId_ = other.itemId_;
      itemCount_ = other.itemCount_;
    }

    public ItemAward Clone() {
      return new ItemAward(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private global::POGOProtos.Inventory.Item.ItemId itemId_ = global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN;
    public global::POGOProtos.Inventory.Item.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "item_count" field.</summary>
    public const int ItemCountFieldNumber = 2;
    private int itemCount_;
    public int ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ItemAward);
    }

    public bool Equals(ItemAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemCount != other.ItemCount) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) hash ^= ItemId.GetHashCode();
      if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemId);
      }
      if (ItemCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemCount);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (ItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
      }
      return size;
    }

    public void MergeFrom(ItemAward other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) {
        ItemId = other.ItemId;
      }
      if (other.ItemCount != 0) {
        ItemCount = other.ItemCount;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            itemId_ = (global::POGOProtos.Inventory.Item.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            ItemCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ItemData : pb::IMessage<ItemData> {
    private static readonly pb::MessageParser<ItemData> _parser = new pb::MessageParser<ItemData>(() => new ItemData());
    public static pb::MessageParser<ItemData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.Item.POGOProtosInventoryItemReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ItemData(ItemData other) : this() {
      itemId_ = other.itemId_;
      count_ = other.count_;
      unseen_ = other.unseen_;
    }

    public ItemData Clone() {
      return new ItemData(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private global::POGOProtos.Inventory.Item.ItemId itemId_ = global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN;
    public global::POGOProtos.Inventory.Item.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "unseen" field.</summary>
    public const int UnseenFieldNumber = 3;
    private bool unseen_;
    public bool Unseen {
      get { return unseen_; }
      set {
        unseen_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ItemData);
    }

    public bool Equals(ItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Count != other.Count) return false;
      if (Unseen != other.Unseen) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) hash ^= ItemId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Unseen != false) hash ^= Unseen.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Unseen != false) {
        output.WriteRawTag(24);
        output.WriteBool(Unseen);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Unseen != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(ItemData other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != global::POGOProtos.Inventory.Item.ItemId.ITEM_UNKNOWN) {
        ItemId = other.ItemId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Unseen != false) {
        Unseen = other.Unseen;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            itemId_ = (global::POGOProtos.Inventory.Item.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Unseen = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
